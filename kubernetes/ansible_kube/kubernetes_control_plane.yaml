---
- hosts: kube-controllers
  name: Bootstrapping an H/A Kubernetes Control Plane
  remote_user: ubuntu
  vars_files:
    - variables.yaml

  tasks:
    - name: "Creating Kubernetes config directory: {{KUBERNETES_CONFIG_DIR}}"
      raw: mkdir -p {{KUBERNETES_CONFIG_DIR}}
      become: true
    - name: "Copying {{PEM_CA}} to {{KUBERNETES_CONFIG_DIR}}"
      copy:
        src: "{{CERTS_DIR}}/{{PEM_CA}}"
        dest: "{{KUBERNETES_CONFIG_DIR}}"
      become: true
    - name: "Copying {{PEM_KUBERNETES_KEY}} to {{KUBERNETES_CONFIG_DIR}}"
      copy:
        src: "{{CERTS_DIR}}/{{PEM_KUBERNETES_KEY}}"
        dest: "{{KUBERNETES_CONFIG_DIR}}"
      become: true
    - name: "Copying {{PEM_KUBERNETES}} to {{KUBERNETES_CONFIG_DIR}}"
      copy:
        src: "{{CERTS_DIR}}/{{PEM_KUBERNETES}}"
        dest: "{{KUBERNETES_CONFIG_DIR}}"
      become: true
    - name: "Downloading Kubernetes API Server"
      raw: wget {{KUBERNETES_REPOSITORY}}/{{KUBERNETES_API_SERVER}}
    - name: "Downloading Kubernetes Scheduler"
      raw: wget {{KUBERNETES_REPOSITORY}}/{{KUBERNETES_SCHEDULER}}
    - name: "Downloading Kubernetes Controller Manager"
      raw: wget {{KUBERNETES_REPOSITORY}}/{{KUBERNETES_CONTROLLER_MANAGER}}
    - name: "Downloading Kubernetes Controller"
      raw: wget {{KUBERNETES_REPOSITORY}}/{{KUBERNETES_CONTROLLER}}
    - name: "Granting execute privileges on Kubernetes binaries"
      raw: chmod +x {{KUBERNETES_API_SERVER}} {{KUBERNETES_CONTROLLER_MANAGER}} {{KUBERNETES_SCHEDULER}} {{KUBERNETES_CONTROLLER}}
    - name: "Moving Kubernetes binaries to {{BIN_DIR}}"
      raw: mv {{KUBERNETES_API_SERVER}} {{KUBERNETES_CONTROLLER_MANAGER}} {{KUBERNETES_SCHEDULER}} {{KUBERNETES_CONTROLLER}} {{BIN_DIR}}
      become: true
    - name: "Copying {{KUBERNETES_AUTH_TOKEN}} to {{KUBERNETES_CONFIG_DIR}}"
      copy:
        src: "{{TOKENS_DIR}}/{{KUBERNETES_AUTH_TOKEN}}"
        dest: "{{KUBERNETES_CONFIG_DIR}}"
      become: true
    - name: "Downloading authorization policy"
      raw: wget {{KUBERNETES_AUTHORIZATION_POLICY_LOCATION}}/{{KUBERNETES_AUTHORIZATION_POLICY_NAME}}
    - name: "Moving authorization policy to {{KUBERNETES_CONFIG_DIR}}"
      raw: mv {{KUBERNETES_AUTHORIZATION_POLICY_NAME}} {{KUBERNETES_CONFIG_DIR}}
      become: true
    - name: "Creating service directory: {{SERVICE_DIR}}"
      raw: mkdir -p {{SERVICE_DIR}}
      become: true
    - name: "Evaluating {{TPL_KUBE_APISERVER_SERVICE}} template and copying it to the service directory"
      become: true
      template:
        src: "{{TEMPLATES_DIR}}/{{TPL_KUBE_APISERVER_SERVICE}}"
        dest: "{{SERVICE_DIR}}/{{KUBERNETES_API_SERVER}}.service"
    - name: "Starting Kubernetes API Server"
      become: true
      systemd:
        name: "{{KUBERNETES_API_SERVER}}"
        daemon_reload: yes
        enabled: True
        state: started
    - name: "Evaluating {{TPL_KUBE_CONTROLLER_MANAGER_SERVICE}} template and copying it to the service directory"
      become: true
      template:
        src: "{{TEMPLATES_DIR}}/{{TPL_KUBE_CONTROLLER_MANAGER_SERVICE}}"
        dest: "{{SERVICE_DIR}}/{{KUBERNETES_CONTROLLER_MANAGER}}.service"
    - name: "Starting Kubernetes Controller Manager"
      become: true
      systemd:
        name: "{{KUBERNETES_CONTROLLER_MANAGER}}"
        daemon_reload: yes
        enabled: True
        state: started
    - name: "Evaluating {{TPL_KUBE_SCHEDULER_SERVICE}} template and copying it to the service directory"
      become: true
      template:
        src: "{{TEMPLATES_DIR}}/{{TPL_KUBE_SCHEDULER_SERVICE}}"
        dest: "{{SERVICE_DIR}}/{{KUBERNETES_SCHEDULER}}.service"
    - name: "Starting Kubernetes Scheduler"
      become: true
      systemd:
        name: "{{KUBERNETES_SCHEDULER}}"
        daemon_reload: yes
        enabled: True
        state: started
